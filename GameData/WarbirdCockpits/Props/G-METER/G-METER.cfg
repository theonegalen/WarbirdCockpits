PROP
{
	name = Warbird_G-METER

	MODEL
	{
		model = ASET/ASET_Avionics/ClassicPack/ASET_G-METER/ASET_G-METER
		texture = ASET_G-METER_Diffuse, WarbirdCockpits/Props/G-METER/WB_G-METER_Full
	}
}

@PROP[Warbird_G-METER]:NEEDS[RasterPropMonitor&!AvionicsSystems]
{ 
// arrow rotation

	MODULE
	{
		name = JSIVariableAnimator
		refreshRate = 1
// GFORCE arrow			
		VARIABLESET
		{
			scale = 0,10
			variableName = SELECT_WARBIRD_GFORCE   
			controlledTransform = Gmeter_arrow
			localRotationStart = 0,-36,0
			localRotationEnd = 0,36,0
			//longPath = yes
		}
	}	

// Backlight emissive ---------------------------------
	
	MODULE
	{
		name = JSICallbackAnimator
		variableName = CUSTOM_WARBIRD_BACKLIGHT_ON
		
		VARIABLESET
		{
			coloredObject = Gmeter_Scale
			passiveColor = COLOR_ASET_AIRCRAFTGAUGESCALE_PASSIVECOLOR
			activeColor = COLOR_ASET_AIRCRAFTGAUGESCALE_ACTIVECOLOR
			scale = 0.5,1.1
		}
		VARIABLESET
		{
			coloredObject = Gmeter_arrow
			passiveColor = COLOR_ASET_AIRCRAFTGAUGEHAND_PASSIVECOLOR
			activeColor = COLOR_ASET_AIRCRAFTGAUGEHAND_ACTIVECOLOR
			scale = 0.5,1.1
		}
	}
}

@PROP[Warbird_G-METER]:NEEDS[AvionicsSystems]
{
	MODULE
	{
		name = MASComponent

		// GFORCE arrow

		ROTATION
		{
			name = Gmeter arrow
			transform = Gmeter_arrow
			startRotation = 0,-36,0
			endRotation = 0,36,0
			variable = fc.GForce()
			range = 0, 10
			blend = true
			cycleRate = 1
		}

		// Backlight emissive ---------------------------------

		COLOR_SHIFT
		{
			name = Arrow Backlight
			transform = Gmeter_arrow
			passiveColor = COLOR_ASET_AIRCRAFTGAUGEHAND_PASSIVECOLOR
			activeColor = COLOR_ASET_AIRCRAFTGAUGEHAND_ACTIVECOLOR
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
		}

		COLOR_SHIFT
		{
			name = Gauge Backlight
			transform = Gmeter_Scale
			passiveColor = COLOR_ASET_AIRCRAFTGAUGESCALE_PASSIVECOLOR
			activeColor = COLOR_ASET_AIRCRAFTGAUGESCALE_ACTIVECOLOR
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
		}
	}
}