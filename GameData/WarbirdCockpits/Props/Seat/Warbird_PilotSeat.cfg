PROP
{
	name = Warbird_PilotSeat

   	MODEL
	{
		model = WarbirdCockpits/Props/Seat/Seat
	}
}

@INTERNAL:HAS[@PROP[Warbird_PilotSeat]]
{
	@PROP[Warbird_PilotSeat],*
	{
		// set some defaults
		&heightVariableName = WARBIRD_PILOTSEAT_POSITION
		&slideVariableName = WARBIRD_PILOTSEAT_TRAVERSAL
		&rotationVariableName = WARBIRD_PILOTSEAT_ROTATION
		&displayseatName = Pilot Seat
		&portraitCameraName = PilotCam
	}
}

// this handles both Warbird_PilotSeat and Warbird_CoPilotSeat
@INTERNAL:HAS[@PROP[Warbird_*PilotSeat]]:LAST[WarbirdCockpits]
{
	@PROP[Warbird_*PilotSeat]:HAS[!MODULE[InternalSeat]],*
	{
		MODULE
		{
			name = InternalSeat
			seatTransformName = Mesh
			allowCrewHelmet = False
			hideKerbal = head
			maxRot = 130
		}
	}

	@PROP[Warbird_*PilotSeat],*
	{
// MAS configuration
		MODULE:NEEDS[AvionicsSystems]
		{
			name = MASComponent
			
			TRANSLATION
			{
				name = Seat Height
				transform = Mesh
				startTranslation = 0, 0, 0
				endTranslation = 0, 0.065, 0
				%variable = #fc.GetPersistentAsNumber("$../../heightVariableName$")
				blend = true
				speed = 0.7
			}

			TRANSLATION
			{
				name = Seat Position
				transform = Mesh
				startTranslation = 0, 0, 0
				endTranslation = 0, 0, -0.13
				%variable = #fc.GetPersistentAsNumber("$../../slideVariableName$")
				blend = true
				speed = 0.7
			}

			ROTATION
			{
				name = Seat Rotation
				transform = seat
				startRotation = 0, 0, 0
				endRotation = 0, 180, 0
				%variable = #fc.GetPersistentAsNumber("$../../rotationVariableName$")
				range = 0, 1
				blend = true
				speed = 0.7
			}

			AUDIO_PLAYER
			{
				name = Motor Sound
				sound = ASET/ASET_Props/Sounds/motor 
				trigger = BOTH
				%variable = #fc.Conditioned(fc.GetPersistentAsNumber("$../../heightVariableName$"))
			}
		}

// RPM Configuration (only supports vertical movement for now)

		MODULE:NEEDS[RasterPropMonitor&!AvionicsSystems]
		{
			name = JSIVariableAnimator
			refreshRate = 1
			
			VARIABLESET
			{
				scale = 0,1
				%variableName = #PERSISTENT_$../../heightVariableName$
				controlledTransform = Mesh
				localTranslationStart = 0,0,0
				localTranslationEnd = 0,0.065,0
				maxRateChange = 0.7
			}
		}
		
		// MODULE:NEEDS[RasterPropMonitor&!AvionicsSystems]
		// {
		// 	name = JSICallbackAnimator
		// 	%variableName = #PERSISTENT_$../heightVariableName$
			
		// 	VARIABLESET
		// 	{
		// 		controlledTransform = Mesh
		// 		scale = 0.5,1.1
		// 		alarmSound = ASET/ASET_Props/Sounds/motor 
		// 		localTranslationStart = 0,0,0
		// 		localTranslationEnd = 0,0,0
		// 		alarmSoundVolume = 0.5
		// 	}
		// } 
		
		// MODULE:NEEDS[RasterPropMonitor&!AvionicsSystems]
		// {
		// 	name = JSICallbackAnimator
		// 	%variableName = #PERSISTENT_$../heightVariableName$
			
		// 	VARIABLESET
		// 	{
		// 		controlledTransform = Mesh
		// 		scale = -0.5,0.5
		// 		alarmSound = ASET/ASET_Props/Sounds/motor 
		// 		localTranslationStart = 0,0,0
		// 		localTranslationEnd = 0,0,0
		// 		alarmSoundVolume = 0.5
		// 	}
		// }
	}
}