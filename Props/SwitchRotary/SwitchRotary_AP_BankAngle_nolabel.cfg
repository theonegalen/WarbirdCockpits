PROP
{
  name = warbird_switchRotary_AP_bankangle_nolabel
  
// Knob model
 
  	MODEL
	{
		model = ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_Model
		texture = SwitchRotaryDiffuse,ASET/ASET_Props/Control/SwitchRotary/model/SwitchRotaryDiffuse
	}
	
// adding collider (Left-Right collider for toggle action)
	
	MODEL
	{
		model = ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_DoubleCollider_L-R
	}
	
// adding switcher position marks with text objects
	
	MODEL
	{
		model = ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_3_Marks
	}	
 
// action

MODULE
{
    name = JSINumericInput
    perPodPersistenceName = Warbird_Autopilot_BankInput
    defaultValue = 0
    stepSize = 1
    minValue = -45
    maxValue = 45
    reverse = false

    loopInput = false

    USERINPUTSET
    {
		switchTransform = ColliderPlus
		incrementCurve
		{
			key = 0 1
			key = 1 15
			key = 3 45
		}
		switchSound = ASET/ASET_Props/Sounds/Rotary01
		switchSoundVolume = 1
    }
	USERINPUTSET
    {
		switchTransform = ColliderMinus
		incrementCurve
		{
			key = 0 -1
			key = 1 -15
			key = 3 -45
		}
		switchSound = ASET/ASET_Props/Sounds/Rotary01
		switchSoundVolume = 1
    }
}

//Transfers Bankinput if in Bank hold mode 
 
	MODULE
	{
		name = JSIActionGroupSwitch
		switchTransform = ColliderPlus
		actionName = transfer
		momentarySwitch = true
		TRANSFERACTION
		{
		    name = JSIPilotAssistant
		    setMethod = SetHorzBank
		    perPodPersistenceName = Warbird_Autopilot_BankInput
			stateVariable = CUSTOM_WARBIRD_BANKHOLD_ON

		}
	}

	MODULE
	{
		name = JSIActionGroupSwitch
		switchTransform = ColliderMinus
		actionName = transfer
		momentarySwitch = true
		TRANSFERACTION
		{
		    name = JSIPilotAssistant
		    setMethod = SetHorzBank
		    perPodPersistenceName = Warbird_Autopilot_BankInput
			stateVariable = CUSTOM_WARBIRD_BANKHOLD_ON
		}
	}
 
	
// Switcher Animation ----------------------------------------------------------------------	
	
	MODULE
	{
		name = JSIVariableAnimator
		refreshRate = 1		
		
		VARIABLESET	
		{		
			controlledTransform  = swRotaryLoc
			localRotationStart = 0,-45,0 
			localRotationEnd  = 0,45,0
			variableName = PERSISTENT_Warbird_Autopilot_BankInput
			scale = -45,45
			maxRateChange = 10.0
		}
	}		
	
// Labels -------------------------------------------------------------------------------

// NAME
//
//	MODULE
//	{
//		name = JSILabel		
//		transformName = TopNameTextObj
//		alignment = Center
//		anchor = LowerCenter
//		lineSpacing  = 0.9
//		fontName = Arial
//		fontSize = 5
//		variableName = CUSTOM_WARBIRD_BACKLIGHT_ON
//		emissive = active 
//		positiveColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
//		zeroColor = COLOR_ASET_SWITCHER_NAME_ZEROCOLOR
//		negativeColor = COLOR_ASET_SWITCHER_NAME_NEGATIVECOLOR
//		labelText = ROLL
//	}
	
// OFF (left pos)

	MODULE
	{
		name = JSILabel		
		transformName = LeftTextObj
		alignment = Left
		anchor = LowerLeft
		fontName = Arial
		fontSize = 4
		fontQuality = 64
		variableName = CUSTOM_WARBIRD_BACKLIGHT_ON
		emissive = active 
		positiveColor = COLOR_ASET_SWITCHER_STATE_POSITIVECOLOR
		zeroColor = COLOR_ASET_SWITCHER_STATE_ZEROCOLOR
		negativeColor = COLOR_ASET_SWITCHER_STATE_NEGATIVECOLOR
		labelText = L
	}

// ON (right pos)

	MODULE
	{
		name = JSILabel		
		transformName = RightTextObj
		alignment = Right
		anchor = LowerRight
		fontName = Arial
		fontSize = 4
		fontQuality = 64
		variableName = CUSTOM_WARBIRD_BACKLIGHT_ON
		emissive = active 
		positiveColor = COLOR_ASET_SWITCHER_STATE_POSITIVECOLOR
		zeroColor = COLOR_ASET_SWITCHER_STATE_ZEROCOLOR
		negativeColor = COLOR_ASET_SWITCHER_STATE_NEGATIVECOLOR
		labelText = R
	}	

// Switcher Backlight -------------------------------------------------------------
	
	MODULE
	{
		name = JSICallbackAnimator
		variableName = CUSTOM_WARBIRD_BACKLIGHT_ON

 		VARIABLESET
		{
			coloredObject = swRotaryCircleMarkObj
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			scale = 0.5,1.1
		}
		
		VARIABLESET
		{
			coloredObject = swRotaryCircleObj
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR
			scale = 0.5,1.1
		}
		
		VARIABLESET
		{
			coloredObject = swRotaryPointerObj
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR
			scale = 0.5,1.1
		}
	}	
 
}


